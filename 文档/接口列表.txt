服务器：
端口
8080
8081
 
DELETE  /v1/accounts/apn (org.whispersystems.textsecuregcm.controllers.AccountController)
    PUT     /v1/accounts/apn (org.whispersystems.textsecuregcm.controllers.AccountController)
    PUT     /v1/accounts/attributes (org.whispersystems.textsecuregcm.controllers.AccountController)
    PUT     /v1/accounts/code/{verification_code} (org.whispersystems.textsecuregcm.controllers.AccountController)
    DELETE  /v1/accounts/gcm (org.whispersystems.textsecuregcm.controllers.AccountController)
    PUT     /v1/accounts/gcm (org.whispersystems.textsecuregcm.controllers.AccountController)
    PUT     /v1/accounts/name (org.whispersystems.textsecuregcm.controllers.AccountController)
    DELETE  /v1/accounts/pin (org.whispersystems.textsecuregcm.controllers.AccountController)
    PUT     /v1/accounts/pin (org.whispersystems.textsecuregcm.controllers.AccountController)
    DELETE  /v1/accounts/registration_lock (org.whispersystems.textsecuregcm.controllers.AccountController)
    PUT     /v1/accounts/registration_lock (org.whispersystems.textsecuregcm.controllers.AccountController)
    DELETE  /v1/accounts/signaling_key (org.whispersystems.textsecuregcm.controllers.AccountController)
    GET     /v1/accounts/turn (org.whispersystems.textsecuregcm.controllers.AccountController)
    DELETE  /v1/accounts/username (org.whispersystems.textsecuregcm.controllers.AccountController)
    PUT     /v1/accounts/username/{username} (org.whispersystems.textsecuregcm.controllers.AccountController)
    GET     /v1/accounts/whoami (org.whispersystems.textsecuregcm.controllers.AccountController)
    GET     /v1/accounts/{transport}/code/{number} (org.whispersystems.textsecuregcm.controllers.AccountController)
    GET     /v1/accounts/{type}/preauth/{token}/{number} (org.whispersystems.textsecuregcm.controllers.AccountController)
    GET     /v1/attachments (org.whispersystems.textsecuregcm.controllers.AttachmentControllerV1)
    GET     /v1/attachments/{attachmentId} (org.whispersystems.textsecuregcm.controllers.AttachmentControllerV1)
    GET     /v1/backup/auth (org.whispersystems.textsecuregcm.controllers.SecureBackupController)
    GET     /v1/certificate/delivery (org.whispersystems.textsecuregcm.controllers.CertificateController)
    GET     /v1/certificate/group/{startRedemptionTime}/{endRedemptionTime} (org.whispersystems.textsecuregcm.controllers.CertificateController)
    GET     /v1/config (org.whispersystems.textsecuregcm.controllers.RemoteConfigController)
    PUT     /v1/config (org.whispersystems.textsecuregcm.controllers.RemoteConfigController)
    DELETE  /v1/config/{name} (org.whispersystems.textsecuregcm.controllers.RemoteConfigController)
    GET     /v1/devices (org.whispersystems.textsecuregcm.controllers.DeviceController)
    PUT     /v1/devices/capabilities (org.whispersystems.textsecuregcm.controllers.DeviceController)
    GET     /v1/devices/provisioning/code (org.whispersystems.textsecuregcm.controllers.DeviceController)
    PUT     /v1/devices/unauthenticated_delivery (org.whispersystems.textsecuregcm.controllers.DeviceController)
    DELETE  /v1/devices/{device_id} (org.whispersystems.textsecuregcm.controllers.DeviceController)
    PUT     /v1/devices/{verification_code} (org.whispersystems.textsecuregcm.controllers.DeviceController)
    GET     /v1/directory/auth (org.whispersystems.textsecuregcm.controllers.DirectoryController)
    PUT     /v1/directory/feedback-v3/{status} (org.whispersystems.textsecuregcm.controllers.DirectoryController)
    PUT     /v1/directory/tokens (org.whispersystems.textsecuregcm.controllers.DirectoryController)
    GET     /v1/directory/{token} (org.whispersystems.textsecuregcm.controllers.DirectoryController)
    GET     /v1/messages (org.whispersystems.textsecuregcm.controllers.MessageController)
    DELETE  /v1/messages/uuid/{uuid} (org.whispersystems.textsecuregcm.controllers.MessageController)
    PUT     /v1/messages/{destination} (org.whispersystems.textsecuregcm.controllers.MessageController)
    DELETE  /v1/messages/{source}/{timestamp} (org.whispersystems.textsecuregcm.controllers.MessageController)
    PUT     /v1/profile (org.whispersystems.textsecuregcm.controllers.ProfileController)
    GET     /v1/profile/form/avatar (org.whispersystems.textsecuregcm.controllers.ProfileController)
    PUT     /v1/profile/name/{name} (org.whispersystems.textsecuregcm.controllers.ProfileController)
    GET     /v1/profile/username/{username} (org.whispersystems.textsecuregcm.controllers.ProfileController)
    GET     /v1/profile/{identifier} (org.whispersystems.textsecuregcm.controllers.ProfileController)
    GET     /v1/profile/{uuid}/{version} (org.whispersystems.textsecuregcm.controllers.ProfileController)
    GET     /v1/profile/{uuid}/{version}/{credentialRequest} (org.whispersystems.textsecuregcm.controllers.ProfileController)
    PUT     /v1/provisioning/{destination} (org.whispersystems.textsecuregcm.controllers.ProvisioningController)
    GET     /v1/sticker/pack/form/{count} (org.whispersystems.textsecuregcm.controllers.StickerController)
    GET     /v1/storage/auth (org.whispersystems.textsecuregcm.controllers.SecureStorageController)
    POST    /v1/voice/description/{code} (org.whispersystems.textsecuregcm.controllers.VoiceVerificationController)
    GET     /v2/attachments/form/upload (org.whispersystems.textsecuregcm.controllers.AttachmentControllerV2)
    GET     /v2/keys (org.whispersystems.textsecuregcm.controllers.KeysController)
    PUT     /v2/keys (org.whispersystems.textsecuregcm.controllers.KeysController)
    GET     /v2/keys/signed (org.whispersystems.textsecuregcm.controllers.KeysController)
    PUT     /v2/keys/signed (org.whispersystems.textsecuregcm.controllers.KeysController)
    GET     /v2/keys/{identifier}/{device_id} (org.whispersystems.textsecuregcm.controllers.KeysController)
    GET     /v3/attachments/form/upload (org.whispersystems.textsecuregcm.controllers.AttachmentControllerV3)
    POST    /tasks/log-level (io.dropwizard.servlets.tasks.LogConfigurationTask)
    POST    /tasks/gc (io.dropwizard.servlets.tasks.GarbageCollectionTask)
